<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket 
		http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
		<!-- <message-converters> @ResponseBody로 String 처리할 때 한글처리 <beans:bean 
			class="org.springframework.http.converter.StringHttpMessageConverter"> <beans:property 
			name="supportedMediaTypes"> <beans:list> <beans:value>text/html;charset=UTF-8</beans:value> 
			</beans:list> </beans:property> </beans:bean> </message-converters> -->
	</annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	<context:component-scan base-package="com.marketdongnae.controller" />

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean>

	<!-- websocket handler -->
	<beans:bean id="echoHandler" class="com.marketdongnae.websockethandler.EchoHandler" />  
	<websocket:handlers>
	    <websocket:mapping handler="echoHandler" path="/echo"/>
	    <websocket:handshake-interceptors>
	        <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
	    </websocket:handshake-interceptors>
	    <!-- <websocket:sockjs /> -->
	</websocket:handlers>
	
		<websocket:message-broker application-destination-prefix="/pub">
		<websocket:stomp-endpoint path="/ws-stomp">
			<!-- 클라이언트가 WebSocket에 연결할 경로 설정 -->
			<websocket:sockjs />
			<!-- SockJS 지원을 활성화하여 WebSocket을 지원하지 않는 브라우저에서 대체 가능한 방법을 제공 -->
		</websocket:stomp-endpoint>
		<websocket:simple-broker prefix="/sub" />
		<!-- SimpleBroker를 사용하여 메시지를 구독하고 발행하는 데 사용되는 주제(prefix) 설정 -->
	</websocket:message-broker>
		<!-- WebSocket 설정 끝 -->


</beans:beans>